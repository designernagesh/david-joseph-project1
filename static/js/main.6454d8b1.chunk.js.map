{"version":3,"sources":["assets/images/project1.png","assets/images/project2.png","assets/images/project3.png","assets/images/email_icon.png","assets/images/github_icon.png","assets/images/linkedin_icon.png","assets/images/twitter_icon.png","data/data.js","Projects.js","data/socialProfiles.js","Socials.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","id","title","description","link","image","project1","project2","project3","Project","this","props","project","style","display","width","margin","src","alt","height","href","Component","Projects","map","key","SocialProfiles","emailIcon","githubIcon","linkedIcon","twitterIcon","SocialIcon","social","Socials","socialProfiles","App","state","displayBio","toggleDisplayBio","setState","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,uOC4B5BC,EAxBF,CACT,CACIC,GAAI,EACJC,MAAO,4BACPC,YAAa,kEACbC,KAAM,8CACNC,MAAOC,KAEX,CACIL,GAAI,EACJC,MAAO,SACPC,YAAa,kEACbC,KAAM,8CACNC,MAAOE,KAEX,CACIN,GAAI,EACJC,MAAO,kCACPC,YAAa,kEACbC,KAAM,8CACNC,MAAOG,MCrBTC,E,iLACO,IAAD,EACwCC,KAAKC,MAAMC,QAA/CV,EADJ,EACIA,MAAOG,EADX,EACWA,MAAOF,EADlB,EACkBA,YAAaC,EAD/B,EAC+BA,KACnC,OACI,yBAAKS,MAAO,CAAEC,QAAS,eAAgBC,MAAO,IAAKC,OAAQ,KACvD,4BAAMd,GACN,yBAAKe,IAAKZ,EAAOa,IAAI,UAAUL,MAAO,CAACE,MAAM,IAAKI,OAAQ,OAC1D,2BAAKhB,GACL,uBAAGiB,KAAOhB,GAASA,Q,GARbiB,aA+BPC,E,iLAfP,OACI,oCACI,oDAEAtB,EAAKuB,KAAI,SAAAX,GACL,OACI,kBAAC,EAAD,CAASY,IAAKZ,EAAQX,GAAIW,QAASA,Y,GARpCS,a,oECWRI,EAvBQ,CACnB,CACIxB,GAAI,EACJG,KAAM,mCACNC,MAAOqB,KAEX,CACIzB,GAAI,EACJG,KAAM,oCACNC,MAAOsB,KAEX,CACI1B,GAAI,EACJG,KAAM,2BACNC,MAAOuB,KAEX,CACI3B,GAAI,EACJG,KAAM,0BACNC,MAAOwB,MCrBTC,E,iLACO,IAAD,EACoBpB,KAAKC,MAAMoB,OAA3B3B,EADJ,EACIA,KAAMC,EADV,EACUA,MACd,OACI,oCACA,uBAAGe,KAAOhB,GAAO,yBAAKa,IAAMZ,EAAQa,IAAI,OAAOL,MAAO,CAACE,MAAO,GAAII,OAAQ,GAAIH,OAAQ,MAAtF,U,GALaK,aA4BVW,E,iLAfP,OACI,oCACA,kDAEIC,EAAeV,KAAK,SAAAQ,GAChB,OACI,kBAAC,EAAD,CAAYP,IAAMO,EAAO9B,GAAK8B,OAASA,Y,GARzCV,aC6BPa,G,iNApCbC,MAAQ,CACNC,YAAY,G,EAEdC,iBAAmB,WACjB,EAAKC,SAAS,CAAEF,YAAa,EAAKD,MAAMC,c,wEAGxC,OACE,oCACM,sCACA,wEACA,4FAEA1B,KAAKyB,MAAMC,WACX,4BAAQG,QAAS7B,KAAK2B,kBAAtB,aAEA,6BACE,2EACA,mGACA,2EACA,4BAAQE,QAAS7B,KAAK2B,kBAAtB,cAKJ,6BAEA,kBAAC,EAAD,MAEA,6BAEA,kBAAC,EAAD,W,GAhCQhB,cCMEmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCZNC,IAASC,OACT,kBAAC,IAAD,KACI,kBAAC,EAAD,OACcC,SAASC,eAAe,SD0HpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6454d8b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/project1.bf56edc6.png\";","module.exports = __webpack_public_path__ + \"static/media/project2.f7e79c7d.png\";","module.exports = __webpack_public_path__ + \"static/media/project3.7bded960.png\";","module.exports = __webpack_public_path__ + \"static/media/email_icon.fd99f8e3.png\";","module.exports = __webpack_public_path__ + \"static/media/github_icon.e2a62886.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin_icon.56ab00e8.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter_icon.512536cb.png\";","import project1 from '../assets/images/project1.png'\r\nimport project2 from '../assets/images/project2.png'\r\nimport project3 from '../assets/images/project3.png'\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        title: 'Example React Application',\r\n        description: 'A REact App that built, involving JS and core web dev concepts!',\r\n        link: 'https://github.com/designernagesh/portfolio',\r\n        image: project1\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'MY API',\r\n        description: 'A REact App that built, involving JS and core web dev concepts!',\r\n        link: 'https://github.com/designernagesh/portfolio',\r\n        image: project2\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Operating Systems Final Project',\r\n        description: 'A REact App that built, involving JS and core web dev concepts!',\r\n        link: 'https://github.com/designernagesh/portfolio',\r\n        image: project3\r\n    }\r\n]\r\n\r\nexport default data","import React, { Component } from 'react'\r\nimport data from './data/data.js'\r\n\r\nclass Project extends Component{\r\n    render(){\r\n        const { title, image, description, link } = this.props.project\r\n        return(\r\n            <div style={{ display: 'inline-block', width: 350, margin: 30 }}>\r\n                <h3>{ title}</h3>\r\n                <img src={image} alt='profile' style={{width:300, height: 200}}/>\r\n                <p>{ description }</p>\r\n                <a href={ link }>{ link }</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Projects extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <h2>Highlighted Projects</h2>\r\n                {\r\n                data.map(project => {\r\n                    return(\r\n                        <Project key={project.id} project={project}  />\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects","import emailIcon from '../assets/images/email_icon.png'\r\nimport githubIcon from '../assets/images/github_icon.png'\r\nimport linkedIcon from '../assets/images/linkedin_icon.png'\r\nimport twitterIcon from '../assets/images/twitter_icon.png'\r\n\r\nconst SocialProfiles = [\r\n    {\r\n        id: 1,\r\n        link: 'mailto:designer.nagesh@gmail.com',\r\n        image: emailIcon\r\n    },\r\n    {\r\n        id: 2,\r\n        link: 'https://github.com/designernagesh',\r\n        image: githubIcon\r\n    },\r\n    {\r\n        id: 3,\r\n        link: 'https://www.linkedin.com',\r\n        image: linkedIcon\r\n    },\r\n    {\r\n        id: 4,\r\n        link: 'https://www.twitter.com',\r\n        image: twitterIcon\r\n    },\r\n    ]\r\n\r\nexport default SocialProfiles","import React, { Component } from 'react'\r\nimport socialProfiles from './data/socialProfiles.js'\r\n\r\nclass SocialIcon extends Component{\r\n    render(){\r\n        const { link, image } = this.props.social\r\n        return(\r\n            <>\r\n            <a href={ link }><img src={ image } alt=\"icon\" style={{width: 36, height: 36, margin: 10 }} /> </a>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass Socials extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            <h2>Connect with me...</h2>\r\n            {\r\n                socialProfiles.map( social => {\r\n                    return (\r\n                        <SocialIcon key={ social.id } social={ social } />\r\n                    )\r\n                })\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Socials","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Projects from './Projects'\nimport Socials from './Socials'\nimport './index.css'\n\nclass App extends Component {\n  state = {\n    displayBio: true\n  }\n  toggleDisplayBio = () => {\n    this.setState({ displayBio: !this.state.displayBio})\n  }\n  render(){\n    return (\n      <>\n            <h1>Hello!</h1>\n            <p>My name is David. I'm a Software Engineer</p>\n            <p>I'm always looking forward to working on meaningful projects.</p>\n          {\n            this.state.displayBio ? (\n            <button onClick={this.toggleDisplayBio}>Read More</button>\n          ) : (          \n            <div>\n              <p>I live in San Francisco, and code every day.</p>\n              <p>My favorite language is JavaScript, and I think React.js is awesome.</p>\n              <p>Besides coding, I also love music and ramen!</p>\n              <button onClick={this.toggleDisplayBio}>Show Less</button>\n            </div>\n            )\n          }\n          \n          <hr />\n\n          <Projects />\n\n          <hr />\n\n          <Socials />\n    </>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}